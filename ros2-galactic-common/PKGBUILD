# Maintainer: Mohammad Mostafa Farzan <m2_farzan@yahoo.com>

pkgname=ros2-galactic-common
pkgver=2021_11_11_03_13
pkgrel=1
pkgdesc="Common ROS 2 Packages (See upstream for the list)"
url="https://github.com/m2-farzan/ros2-supplementary-pkgbuilds"
arch=('any')
depends=(
    'ros2-galactic'
    'boost-libs'
    'ceres-solver'
    'lcov'
    'opencv'
    'python-pyzmq'
    'python-yaml'
    'python-yaml'
)
source=(
    "angles::git+https://github.com/ros/angles#branch=ros2"
    "behaviortree_cpp_v3::git+https://github.com/BehaviorTree/BehaviorTree.CPP"
    "bond_core::git+https://github.com/ros/bond_core#branch=ros2"
    "diagnostics::git+https://github.com/ros/diagnostics#branch=galactic"
    "geographic_info::git+https://github.com/ros-geographic-info/geographic_info#branch=ros2"
    "navigation2::git+https://github.com/ros-planning/navigation2#branch=galactic"
    "ompl::git+https://github.com/ompl/ompl"
    "robot_localization::git+https://github.com/cra-ros-pkg/robot_localization#branch=galactic"
    "xacro::git+https://github.com/ros/xacro#branch=ros2"

    "gazebo_ros_pkgs.repos::https://raw.githubusercontent.com/ros-simulation/gazebo_ros_pkgs/galactic/gazebo_ros_pkgs.repos"
    
    "version-lock.patch"
)
sha256sums=(
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'
    'SKIP'

    'SKIP'

    'SKIP'
)

pkgver() {
    printf "$(date +'%Y_%m_%d_%H_%M')"
}

prepare() {
    # robot_localization
    sed -i "s/c++14/c++17/g" $srcdir/robot_localization/CMakeLists.txt

    # gazebo_ros_pkgs
    patch -p0 --forward $(readlink -f $srcdir/gazebo_ros_pkgs.repos) $srcdir/version-lock.patch || true
    mkdir -p $srcdir/gazebo_ros_pkgs
    vcs import $srcdir/gazebo_ros_pkgs < $srcdir/gazebo_ros_pkgs.repos
}

build() {
    # Skip locally installed packages to avoid pacman conflicts
    PROVIDED_PACKAGES_=$(find $srcdir/src -name package.xml | xargs dirname | xargs -L1 basename | sort | uniq)
    INSTALLED_PACKAGES_=$(pacman -Ql ros2-galactic | grep -oP "/share/\K[^/]+" | sort | uniq)
    EXCLUDE_LIST_=$(comm -12 <(printf "${PROVIDED_PACKAGES_}") <(printf "${INSTALLED_PACKAGES_}"))

    # Disable parallel build if RAM is low
    if [[ $(free | grep -Po "Mem:\s+\K\d+") < 32000000 ]]; then
        printf "\nRAM is smaller than 32 GB. Parallel build will be disabled for stability.\n\n"
        export COLCON_EXTRA_ARGS="${COLCON_EXTRA_ARGS} --executor sequential"
    fi

    # Build
    colcon build --merge-install --packages-skip ${EXCLUDE_LIST_} ${COLCON_EXTRA_ARGS}
}

package() {
    # Copy build files
    mkdir -p $pkgdir/opt/ros2/galactic
    cp -r $srcdir/install/* $pkgdir/opt/ros2/galactic/

    # Exclude files that clash with base ros installation
    rm $pkgdir/opt/ros2/galactic/*setup.*
    rm $pkgdir/opt/ros2/galactic/_local_setup*
    rm $pkgdir/opt/ros2/galactic/COLCON_IGNORE
}
